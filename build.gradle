plugins {
  id 'org.springframework.boot' version '2.5.6'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'java'
  id 'application'
  id 'checkstyle'
  id 'jacoco'
  id 'org.sonarqube' version '3.0'
  id 'maven-publish'
}

group = 'cn.hjmao'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'io.jsonwebtoken:jjwt:0.9.1'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.apache.httpcomponents:httpclient'

  runtimeOnly 'com.h2database:h2'
}

compileJava {
  options.compilerArgs << '-Xlint:unchecked'
}

checkstyle {
  toolVersion = '8.39'
  configFile = project(':').file('config/checkstyle/checkstyle.xml')
  configProperties = [ "suppressionFile" : project(':').file('config/checkstyle/suppressions.xml')]
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.enabled = true
  }
  afterEvaluate {
    classDirectories.from = files(classDirectories.files.collect {
      fileTree(dir: it, excludes: [])
    })
  }
}

sonarqube {
  properties {
    property 'sonar.host.url', 'https://sonarcloud.io'
    property "sonar.organization", "huajianmao-github"
    property "sonar.projectKey", "huajianmao_springboot-with-jwt-starter"
    property "sonar.sourceEncoding", "UTF-8"
    property 'sonar.jacoco.reportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
  }
}

tasks['sonarqube'].dependsOn jacocoTestReport

application {
  mainClassName = 'cn.hjmao.auth.JwtApplication'
}

jar {
  enabled = true
}

def newArtifactId = rootProject.name.replace('.', '-')

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/huajianmao/jwtauth"
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
      }
    }
  }

  publications {
    bootJava(MavenPublication) {
      artifact bootJar
      artifactId "${newArtifactId}"
    }
    gpr(MavenPublication) {
      from(components.java)
      artifactId "${newArtifactId}"
    }
  }
}
